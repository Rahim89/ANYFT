package com.springmvc.Controller;



import java.util.List;

import javax.validation.Valid;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.servlet.ModelAndView;


import com.springmvc.Beans.Tour;
import com.springmvc.Beans.TourPackage;
import com.springmvc.Beans.Users;

import com.springmvc.DAO.TourPackageDAO;
import com.springmvc.DAO.UsersDAO;

import com.springmvc.DAOImpl.TourPackageDAOImpl;
import com.springmvc.DAOImpl.UsersDAOImpl;

@Controller
public class HomeController {
	
	/**
	 * show the home page
	 * @return
	 */
	@RequestMapping(value="/", method=RequestMethod.GET)
	public ModelAndView displayHomePage() {
		ModelAndView mav = new ModelAndView("home");
		
		return mav;
	}
	
	@RequestMapping("/home")
	public ModelAndView showHome() {
		ModelAndView mav = new ModelAndView("home");
		
		return mav;
	}
	
	
	/**
	 * show the login form to allow the user to log in
	 * @return
	 */
	@RequestMapping(value="/login", method=RequestMethod.GET)
	public ModelAndView displayForm() {
		
	    ModelAndView mav = new ModelAndView("login");
		return mav;
		
	}
	
	/**
	 * verification of the login credentials
	 * @param log
	 * @return the home page if the login is successful or return the error page if the credentials does not match
	 */
	@RequestMapping(value="/userverification", method=RequestMethod.POST)
	public ModelAndView validateLogin(@ModelAttribute("login") Users user) {
		
	UsersDAO userDAO = new UsersDAOImpl();
	
	Users dbuser = new Users();
	
	dbuser = userDAO.getUsersByUsername(user.getUserName());

	if(dbuser.getPassword()!=null) {

		if(dbuser.getPassword().equals(user.getPassword())) {
			
		      ModelAndView mav = new ModelAndView("home");
		
		      return mav;
		}
		
	}
	ModelAndView mav = new ModelAndView("errorPage");
	
	return mav;
		
	}
	/**
	 * show the registration page to allow the user to register
	 * @return
	 */
	@RequestMapping("/registration")
	public ModelAndView showRegistration() {
		ModelAndView mav= new ModelAndView("registration");
		mav.addObject("userkey", new Users());
		
		return mav;
		
		 
	}
	
	@RequestMapping(value="/registrationverification", method=RequestMethod.POST)
	public String registrationVerification(@ModelAttribute("userkey") @Valid Users user,  BindingResult errors, Model model) {
		if(!errors.hasErrors()) {
			model.addAttribute("username", user.getUserName());
			model.addAttribute("passsword", user.getPassword());
			model.addAttribute("confirmPasssword", user.getPassword());
			model.addAttribute("firstName", user.getFirstName());
			model.addAttribute("lastName", user.getLastName());
			model.addAttribute("email", user.getEmail());
			
			model.addAttribute("address", user.getAddress());
			model.addAttribute("phoneNo", user.getPhoneNo());
			model.addAttribute("country", user.getCountry());
			
			
			
			return "login";
		}
		return "redirect:/registration";
	}
	
	
	/**
	 * Display the tour package 
	 * @return
	 */
	@RequestMapping("/tourpackage")
	public ModelAndView displayTours() {
		ModelAndView mav = new ModelAndView("tourpackage");
		
		return mav;
	}
	
	/**
	 * Display the booking page for the user to book
	 * @return
	 */
	@RequestMapping("/booking")
	public ModelAndView displayBooking() {
		ModelAndView mav = new ModelAndView("booking");
		
		return mav;
	}
	/**
	 * to display the list of the tour packages
	 * @return the list of the packages
	 */
	@RequestMapping(value = { "/tourpackage" }, method = RequestMethod.GET)
	public ModelAndView listTourPackage() {

		TourPackageDAO tourpackageDAO = new TourPackageDAOImpl();
		List<TourPackage> listTourPackages = tourpackageDAO.getAllTourPackage();
	    ModelAndView map = new ModelAndView("tourpackage");
	    map.addObject("packages", listTourPackages);

	    return map;
	}
	
	
//	@RequestMapping(value="/userverification", method=RequestMethod.POST)
//	public ModelAndView validateBookin(@ModelAttribute("login") Tour tour) {
//		 
//	}
}
	


